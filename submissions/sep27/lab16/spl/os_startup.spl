//load idle code
loadi(69, 11);
loadi(70, 12);

//load init program
loadi(65, 7);
loadi(66, 8);

//load library module
loadi(63, 13);
loadi(64, 14);

//load INT10 program(exit program)
loadi(22, 35);
loadi(23, 36);

//load exception handler
loadi(2, 15);
loadi(2, 16);

//load timer interrupt
loadi(4, 17);
loadi(5, 18);

//load INT7 (write interrupt)
loadi(16, 29);
loadi(17, 30);

//module 7
loadi(54, 67);
loadi(55, 68);

//Idle program
PTBR = PAGE_TABLE_BASE;

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//logical page 2 and 3 for heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

//logical page 4,5,6,7 for  code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = 70;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1';
[PTBR + 15] = "0000";

//logical page 8 and 9 for stack
[PTBR + 16] = 81;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";


///////INIT PROGRAM
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;
//logical page 0 and 1 for library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//logical page 2 and 3 for heap
[PTBR + 4] = 78;
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";

//logical page 4,5,6,7 for  code
[PTBR + 8] = 65;
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1';
[PTBR + 15] = "0000";

//logical page 8 and 9 for stack
[PTBR + 16] = 76;
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";

//Set up PID
[PROCESS_TABLE + 1] = 0;
[PROCESS_TABLE + 17] = 1;

//Set up user area
[PROCESS_TABLE + 11] = 82;
[PROCESS_TABLE + 16+11] = 80;

//Set up process state(entry 4 is process table)
[PROCESS_TABLE + 4] = CREATED;
[PROCESS_TABLE + 16+4] = RUNNING;

//Set UPTR field
[PROCESS_TABLE + 13] = 8*512;
[PROCESS_TABLE + 16+13] = 8*512;
//Set KPTR field
[PROCESS_TABLE + 12] = 0;
[PROCESS_TABLE + 16+12] = 0;

//Set up ptbr and ptlr
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = 10;
[PROCESS_TABLE + 16+14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16+15] = 10;

//Set enrty point
[81 * 512] = [69 * 512 + 1];
[76 * 512] = [65 * 512 + 1];

//Set up currently running process
[SYSTEM_STATUS_TABLE + 1] = 1;

//Set SP
SP = 8*512;

//go to user mode
print "osStartupDone";
ireturn;