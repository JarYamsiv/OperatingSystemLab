//Save the current value of User Sp into process table
//print "timer";
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = SP;

//Set SP to beginning of kernel stack of current Process
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 + [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 12];

//backup
backup;

//print "timer1";

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 4] = READY;

//iNVOKE sCHEDULER
call MOD_5;

restore;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +12] = SP % 512;

//set SP to userSP of new process
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) +13];

if([SYSTEM_STATUS_TABLE + 1] == 2) then
	[SYSTEM_STATUS_TABLE + 1] = 2;
	//print "timer";
	//print SP;
endif;

//print "user";
//print SP;
//print [PTBR + (SP/512)*2];

ireturn;

